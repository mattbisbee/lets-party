{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Header.js","pics/user1.jpg","pics/user2.jpg","pics/user3.jpg","components/ReviewsCarousel.js","components/Reviews.js","pics/basket5.jpg","components/About.js","pages/Home.js","pages/Contact.js","pages/Footer.js","components/Nav/index.js","utils/queries.js","utils/helpers.js","components/ProductItem/index.js","components/ProductList/index.js","components/BasketItem/index.js","components/Basket/index.js","components/CategoryMenu/index.js","pages/ProductDetail.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["TOGGLE_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","UPDATE_PRODUCTS","reducer","state","action","type","products","cartOpen","cart","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","idToken","localStorage","setItem","window","location","assign","getItem","exp","Date","now","err","removeItem","linkStyle","textDecoration","color","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","console","log","variables","mutationResponse","data","Auth","handleChange","target","name","className","onSubmit","for","id","placeholder","onChange","to","style","Signup","addUser","firstName","lastName","htmlFor","Header","strings","typeSpeed","backSpeed","loop","ReviewsCarousel","showArrows","infinityLoop","showThumbs","showStatus","autoPlay","interval","src","User1","alt","User2","User3","Reviews","About","basket5","Home","params","particles","number","density","enable","value_area","shape","stroke","width","Contact","class","rows","Footer","href","rel","getFullYear","title","margin","Nav","loggedIn","icon","faBars","onClick","logout","QUERY_PRODUCTS","QUERY_CHECKOUT","QUERY_CATEGORIES","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","image","price","quantity","itemInCart","find","cartItem","parseInt","ProductList","useQuery","loading","useEffect","forEach","then","category","BasketItem","role","removeFromCart","stripePromise","loadStripe","Basket","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","productIds","i","push","CategoryMenu","categoryData","ProductDetail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.45d88cd9.chunk.js","sourcesContent":["export const TOGGLE_CART = \"TOGGLE_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n\r\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";","import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  ADD_TO_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState)\r\n}","import React, { createContext, useContext } from \"react\";\r\nimport { useProductReducer } from './reducers'\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useProductReducer({\r\n    products: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LOGIN } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"blue\",\r\n};\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      console.log({ email: formState.email, password: formState.password });\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <br></br>\r\n      <h1>My Account</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"form-group\">\r\n          <label for=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label for=\"pwd\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Enter password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <br></br>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <br></br>\r\n      <Link to=\"/signup\" style={linkStyle}>\r\n        Go to Signup\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"blue\",\r\n};\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form action=\"login\" onSubmit={handleFormSubmit}>\r\n        <div className=\"Register\">\r\n          <br></br>\r\n          <h1>Create an Account</h1>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstName\">First Name:</label>\r\n            <input\r\n              placeholder=\"First\"\r\n              name=\"firstName\"\r\n              type=\"firstName\"\r\n              className=\"form-control\"\r\n              id=\"firstName\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lastName\">Last Name:</label>\r\n            <input\r\n              placeholder=\"Last\"\r\n              name=\"lastName\"\r\n              type=\"lastName\"\r\n              className=\"form-control\"\r\n              id=\"lastName\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"pwd\">Password:</label>\r\n            <input\r\n              placeholder=\"Enter password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"pwd\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <br></br>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Create\r\n          </button>\r\n        </div>\r\n        <br></br>\r\n        <Link to=\"/login\" style={linkStyle}>\r\n          Go to Login\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;","import React from \"react\";\r\nimport Typed from \"react-typed\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-wraper\">\r\n      <div className=\"main-info\">\r\n        <h1>in One Basket</h1>\r\n        <Typed\r\n          className=\"typed-text\"\r\n          strings={[\r\n            \"Make your Basket with Chocolates\",\r\n            \"Flowers\",\r\n            \"Cookies\",\r\n            \"Journals\",\r\n            \"Teddy Bears\",\r\n            \"Blankets\",\r\n            \"Baby Showers\",\r\n            \"Office Parties\",\r\n            \"Birthdays\"\r\n          ]}\r\n          typeSpeed={40}\r\n          backSpeed={60}\r\n          loop\r\n        />\r\n        {/* <div className=\"btn-list\">\r\n          <a href={Categories} className=\"btn-contact\">\r\n            Shop Now\r\n          </a>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/user1.cb10c0cb.jpg\";","export default __webpack_public_path__ + \"static/media/user2.2f91ebf5.jpg\";","export default __webpack_public_path__ + \"static/media/user3.14091a9f.jpg\";","import React from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport User1 from \"../pics/user1.jpg\";\r\nimport User2 from \"../pics/user2.jpg\";\r\nimport User3 from \"../pics/user3.jpg\";\r\n\r\nconst ReviewsCarousel = () => {\r\n  return (\r\n    <Carousel\r\n      showArrows={true}\r\n      infinityLoop={true}\r\n      showThumbs={false}\r\n      showStatus={false}\r\n      autoPlay={true}\r\n      interval={3000}\r\n    >\r\n      <>\r\n        <img src={User1} alt=\"John Doe\" />\r\n        <div className=\"myCarousel\">\r\n          <h3>John Doe</h3>\r\n          <p className =\"pCarousel\">\r\n            I really love this website, I send a basket of chocolates, flowers\r\n            and a teddy Bear to my now girlfriend, the basket was so cute and\r\n            she love it! Thank you guys!\r\n          </p>\r\n        </div>\r\n      </>\r\n      <>\r\n        <img src={User2} alt=\"Bob Doe\" />\r\n        <div className=\"myCarousel\">\r\n          <h3>Bob Doe</h3>\r\n          <p className =\"pCarousel\">\r\n            I bought a basket of cookies, journals and teddy bears to my grandma\r\n            and she was very happy about, it was delivered on time.\r\n          </p>\r\n        </div>\r\n      </>\r\n      <>\r\n        <img src={User3} alt=\"Mary Doe\" />\r\n        <div className=\"myCarousel\">\r\n          <h3>Mary Doe</h3>\r\n          <p className =\"pCarousel\">\r\n            My mom was sick in the hospital and I couldn't visit her cuz I was\r\n            out of Country but she received a basket of blanket, teddy bear,\r\n            maccaroon and chocolates, I was so happy for it.\r\n          </p>\r\n        </div>\r\n      </>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ReviewsCarousel;\r\n","import React from \"react\";\r\nimport ReviewsCarousel from \"./ReviewsCarousel\";\r\n\r\nconst Reviews = () => {\r\n  return (\r\n    <div className=\"reviews\">\r\n      <h1>Happy Customers</h1>\r\n      <div className=\"container\">\r\n        <div className=\"rev-content\">\r\n          <ReviewsCarousel />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","export default __webpack_public_path__ + \"static/media/basket5.f324c57b.jpg\";","import React from \"react\";\r\nimport basket5 from \"../pics/basket5.jpg\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\" className=\"container py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6 col-xm-12\">\r\n          <div className=\"photo-wrap mb-5\">\r\n            <img className=\"profile-img\" src={basket5} alt=\"Pineapple\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 col-xm-12\">\r\n          <h1 className=\"about-heading\">Welcome to our page!</h1>\r\n          <p className=\"description\">\r\n            Find the perfect, unique gift basket to send for every occasion. Our\r\n            gift baskets are filled with something for everyone on your list\r\n            from chocolates, cookies, flowers, journals, Teddy Bears and\r\n            Blankets. The only thing you need to add is a lot of Love!!!.\r\n          </p>\r\n          <p className=\"deli\">WE DELIVER!!!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import Particles from \"react-particles-js\";\r\nimport Header from \"../components/Header\";\r\nimport ReviewsCarrousel from \"../components/Reviews\";\r\nimport About from \"../components/About\";\r\n\r\nfunction Home(){\r\nreturn (\r\n    <>\r\n    <Particles\r\n      className=\"particles-canvas\"\r\n      params={{\r\n        particles: {\r\n          number: {\r\n            value: 30,\r\n            density: {\r\n              enable: true,\r\n              value_area: 900,\r\n            },\r\n          },\r\n          shape: {\r\n            type: \"star\",\r\n            stroke: {\r\n              width: 6,\r\n              color: \"#ea33ff\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    />\r\n    <Header />\r\n    <About />\r\n    <ReviewsCarrousel />\r\n  </>\r\n)\r\n}\r\nexport default Home\r\n","function Contact(){\r\n    return(\r\n        <>\r\n        <br></br>\r\n        <div className=\"mb-3 mx-5 fw-bolder\" >\r\n          <label for=\"exampleFormControlInput1\" className=\"form-label mt-5\">Email address</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n        </div>\r\n        <div className=\"mb-3 mx-5 fw-bolder\">\r\n          <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Comments</label>\r\n          <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary d-grid mx-auto mb-5\">Sumbit</button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from \"react\";\r\nimport { Facebook } from \"react-bootstrap-icons\";\r\nimport { Google } from \"react-bootstrap-icons\";\r\nimport { Instagram } from \"react-bootstrap-icons\";\r\nimport { Twitter } from \"react-bootstrap-icons\";\r\nimport { Reddit } from \"react-bootstrap-icons\";\r\nimport '../App.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"row align-items-start\">\r\n            <div className=\"col\">\r\n              <a\r\n                href=\"https://www.instagram.com/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Instagram />\r\n              </a>\r\n            </div>\r\n            <div className=\"col\">\r\n              <a\r\n                href=\"mailto:carinvid@gmail.com\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Google />\r\n              </a>\r\n            </div>\r\n            <div className=\"col\">\r\n              <a\r\n                href=\"https://www.facebook.com/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Facebook />\r\n              </a>\r\n            </div>\r\n            <div className=\"col\">\r\n              <a\r\n                href=\"https://www.twitter.com/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Twitter />\r\n              </a>\r\n            </div>\r\n            <div className=\"col\">\r\n              <a\r\n                href=\"https://www.reddit.com/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <Reddit />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"pt-3 text-center\">\r\n          Copyright&copy; {new Date().getFullYear()}&nbsp; In One Basket | All\r\n          Rights Reserved\r\n        </p>\r\n        <p className=\"pt-3 text-center\"> Site Icon made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PersonFill } from \"react-bootstrap-icons\";\r\nimport { HouseFill } from \"react-bootstrap-icons\";\r\nimport { CardChecklist } from \"react-bootstrap-icons\";\r\nimport { ChatTextFill } from 'react-bootstrap-icons';\r\nimport { DoorOpenFill } from 'react-bootstrap-icons';\r\nimport '../../index.css'\r\nimport \"../../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst linkStyle = {\r\n  margin: \"5rem\",\r\n  textDecoration: \"none\"\r\n};\r\n\r\nfunction Nav() {\r\n  function displayNav() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n          <div className=\"container\">\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <FontAwesomeIcon icon={faBars} style={{ color: \"white\" }} />\r\n            </button>\r\n\r\n            <div\r\n              className=\"collapse navbar-collapse m-auto\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav m-auto\">\r\n                <li>\r\n                  <Link to=\"/\" style={linkStyle}>\r\n                    <HouseFill /> Home\r\n                  </Link>\r\n                </li>\r\n                \r\n                <li>\r\n                  <Link to=\"/categoryMenu\" style={linkStyle}>\r\n                   <CardChecklist /> Categories and Basket\r\n                  </Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/contact\" style={linkStyle}>\r\n                    <ChatTextFill /> Contact\r\n                  </Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/\" style={linkStyle} onClick={() => Auth.logout()}>\r\n                    <DoorOpenFill /> Logout\r\n                  </Link>\r\n                </li>\r\n\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\r\n            <div className=\"container\">\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <FontAwesomeIcon icon={faBars} style={{ color: \"white\" }} />\r\n              </button>\r\n\r\n            <div className=\"collapse navbar-collapse m-auto\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav m-auto\">\r\n                <li>\r\n                  <Link to=\"/\" style={linkStyle}>\r\n                   <HouseFill /> Home\r\n                  </Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/categoryMenu\" style={linkStyle}>\r\n                   <CardChecklist /> Categories and Basket\r\n                  </Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/signup\" style={linkStyle}>\r\n                    <PersonFill /> Signup\r\n                  </Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/login\" style={linkStyle}>\r\n                  <PersonFill /> Login\r\n                  </Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/contact\" style={linkStyle}>\r\n                    <ChatTextFill /> Contact\r\n                  </Link>\r\n                </li>\r\n\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <nav>\r\n        {displayNav()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('InOneBasket', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport \"../../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"hotpink\"\r\n};\r\n\r\nfunction ProductItem(item) {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link style={linkStyle} to={`/products/${_id}`} >\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n          className=\"productImage\"\r\n        />\r\n        <p className=\"categoryPara\">{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div> {(\"item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n        <br></br>\r\n      <button onClick={addToCart}>Add to Basket</button>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import React, { useEffect } from 'react';\r\nimport ProductItem from '../ProductItem';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_PRODUCTS } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport \"../../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction ProductList() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2 className=\"catH2\">Basket Options:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { Trash2Fill } from 'react-bootstrap-icons';\r\nimport '../Basket/style.css';\r\n\r\nconst BasketItem = ({ item }) => {\r\n\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"container\">\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n          className=\"cartImage\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty: </span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            <Trash2Fill />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasketItem;","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport BasketItem from '../BasketItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\nimport { Basket3Fill } from \"react-bootstrap-icons\";\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Basket = () => {\r\n  const [state, dispatch] = useStoreContext();\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <br></br>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          <Basket3Fill />\r\n          <br></br>\r\n          Your Custom Basket\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <br></br>\r\n      <h2>Basket</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <BasketItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n            <br></br>\r\n            {Auth.loggedIn() ? (\r\n              <button className=\"btn btn-primary btn-lg\" onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span> (Please log in to purchase)</span>\r\n            )}\r\n            <br></br>\r\n            <button className=\"btn btn-primary btn-lg\" onClick={toggleCart}>\r\n              Minimize Basket\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          Add items to your custom Gift Basket!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Basket;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport ProductList from \"../../components/ProductList\";\r\nimport \"../../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Basket from \"../../components/Basket\";\r\n\r\nfunction CategoryMenu() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container contBtn\">\r\n      <br></br>\r\n      <h2 className=\"catH2\">Category Choices:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          className=\"btn btn-primary btn-lg\"\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n      <br></br>\r\n      <br></br>\r\n      <ProductList />\r\n      <Basket />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../utils/GlobalState';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport Basket from '../components/Basket';\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\"\r\n};\r\n\r\nfunction ProductDetail() {\r\n  const [state, dispatch] = useStoreContext();\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>{currentProduct.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong> ${currentProduct.price}{' '}\r\n            <br></br>\r\n            <br></br>\r\n            <button onClick={addToCart}>Add to Basket</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Basket\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n          <br></br>\r\n          <br></br>\r\n          <Link to=\"/\" style={linkStyle}>Back to Home</Link>\r\n          <br></br>\r\n          <br></br>\r\n          <Link to=\"/categoryMenu\" style={linkStyle}>Back to Categories</Link>\r\n          <br></br>\r\n          <br></br>\r\n          <Basket />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\n\r\nimport { StoreProvider } from './utils/GlobalState';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Home from \"./pages/Home\"\r\nimport Contact from \"./pages/Contact\"\r\nimport Footer from \"./pages/Footer\";\r\nimport Nav from './components/Nav';\r\nimport CategoryMenu from './components/CategoryMenu';\r\nimport ProductDetail from './pages/ProductDetail';\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n//import Particles from \"react-particles-js\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <StoreProvider>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/signup\" component={Signup} />\r\n              <Route exact path=\"/contact\" component={Contact} />\r\n              <Route exact path=\"/categoryMenu\" component={CategoryMenu} />\r\n              <Route exact path=\"/products/:id\" component={ProductDetail} />\r\n            </Switch>\r\n            <Footer />\r\n          </StoreProvider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}